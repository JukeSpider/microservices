version: '3.4'

services:
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    networks:
      - auth
    env_file:
      - auth-service/.env
    ports:
      - "8080:8080"
      - "5005:5005"
    command: [
      "java",
      "-Xmx2048m",
      "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005",
      "-jar",
      "/app.jar",
      "--server.port=8080"
    ]
    depends_on:
      - database
      - notification
      - eureka

  notification:
    build:
      context: .
      dockerfile: notification/Dockerfile
    container_name: notification
    networks:
      - auth
    env_file:
      - notification/.env
    ports:
      - "8081:8081"
      - "5006:5006"
    command: [
      "java",
      "-Xmx2048m",
      "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006",
      "-jar",
      "/app.jar",
      "--server.port=8081"
    ]
    depends_on:
      - database
      - eureka

  eureka:
    build:
      context: .
      dockerfile: eureka/Dockerfile
    container_name: eureka
    networks:
      - auth
    ports:
      - "8761:8761"
      - "5061:5061"
    command: [
      "java",
      "-Xmx2048m",
      "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5061",
      "-jar",
      "/app.jar",
      "--server.port=8761"
    ]

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: gateway
    networks:
      - auth
    ports:
      - "8000:8000"
      - "5000:5000"
    command: [
      "java",
      "-Xmx2048m",
      "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000",
      "-jar",
      "/app.jar",
      "--server.port=8000"
    ]

  database:
    container_name: postgres
    image: postgres
    env_file:
      - auth-service/.env
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - auth
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - auth-service/.env
    ports:
      - "5050:80"
    networks:
      - auth
    restart: unless-stopped

networks:
  auth:
    driver: bridge

volumes:
  postgres:
  pgadmin: